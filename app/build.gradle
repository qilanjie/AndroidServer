apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.libraries // 库

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId "com.safframework.androidserver"
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    android.buildFeatures.viewBinding =true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "io.netty:netty-all:${libs.netty}"
    implementation "com.safframework.log:saf-log-core:${libs.saf_log}"

    implementation project(":core")
    implementation project(":converter:gson")

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${libs.kotlinx_coroutines_core}"
    implementation "com.safframework.kotlin.coroutines:coroutines-utils:${libs.coroutines_utils}"
    implementation 'com.safframework.utils:saf-kotlin-utils:0.2.1'
    implementation 'com.safframework.utils:saf-kotlin-ext:0.2.1'
}
